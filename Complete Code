using System;
using System.Linq;

namespace Torres_de_Hanoi
{
    class Program
    {
        static void Main(string[] args) { Menu(); }



        public static void Menu()
        {
            int opc;
            Console.Clear();
            // Aqui iria un titulo bien padre así tipo hanoi 
            Console.WriteLine("Bienvenido a torres_de_hanoi.exe"); 
            Console.WriteLine("1.- Instrucciones\t2.-Nueva Partida\t3.-Marcador\t4.-Salir");
            opc = int.Parse(Console.ReadLine());

            switch (opc){
                case 1:
                    try 
                    {
                        Instrucciones();
                    }catch (Exception Ex) { Console.WriteLine("Oooops hubo un error " + Ex.Message); }
                    break;
                case 2:
                    try
                    {
                        Console.WriteLine("¿Con cuántos discos quieres jugar? ");
                        int discos = int.Parse(Console.ReadLine());
                        Dibujar(Nuevo(discos), discos);

                        
                    }
                    catch (Exception Ex) { Console.WriteLine("Oooops hubo un error " + Ex.Message); }
                    break;
                case 3:
                    try
                    {
                        
                    }
                    catch (Exception Ex) { Console.WriteLine("Oooops hubo un error " + Ex.Message); }
                    break;
                case 4:
                    try
                    {
                        Environment.Exit(0);
                    }
                    catch (Exception Ex) { Console.WriteLine("Oooops hubo un error " + Ex.Message); }
                    break;
            }

        }
        public static void Instrucciones()
        {
            //Podemos escribir todo aqui o escribir un .txt y que lo vaya leyendo 

            Console.WriteLine("El juego consiste...");
            Console.WriteLine("Presione cualquier tecla...");
            Console.ReadLine();
            Console.WriteLine("Eso seria todo");
            Console.WriteLine("Presione cualquier tecla...");
            Menu();
        }

        public static void Dibujar(int[,] H, int discos)
        {
            // Elementos Visulaes  
            string suelo =   ("---|-------|-------|---");
            /* En primera columna Apoyo Visual 
            "  1  "
            " 222 "
            "33333"
            "---|-------|-------|---"
             */

            // Solo sirve para numeros de 1 digito 

            for (int j = 0; j < discos; j++)
            {
                for (int i = 0; i < 3; i++)
                {
                    if (H[1, i] != 0)
                    {
                        for (int k = 0; k < i; k++)
                        {
                            Console.Write("\t");
                        }
                        string pieza = string.Concat(Enumerable.Repeat(j + 1, 2 * (j + 1) - 1));
                        Console.Write(pieza + "\n");
                    }
                }
            }
            Console.WriteLine(suelo);

        }

        public static int[,] Nuevo(int discos)
        {
            int[,] H = new int[discos,3];

            for (int j = 0; j < 3; j++)
            {
                for (int i = 0; i < discos; i++)
                {
                   if(j == 0)
                    {
                        H[i, j] = i + 1;
                    }
                    else { H[i, j] = 0; }
                }
            }

            /* Parte de prueba remover despues
            for (int i = 0; i < discos; i++)
            {
                for (int j = 0; j < 3; j++)
                {
                    Console.Write(H[i, j]);
                }
                Console.WriteLine();
            }
            */
            return (H);



        }

        public static int[,] Juego(int[,]H, int discos)
        {
            Console.WriteLine("Columna: ");
            int C_orig = int.Parse(Console.ReadLine());
            Console.WriteLine(" a: ");
            int C_dest = int.Parse(Console.ReadLine());

            // *** Logica del juego ***

            for (int i = 0; i < discos; i++)                                            // Itera en todas las filas
            {
                if (H[i, C_orig] != 0)                                                  // Busca el Primer disco 
                {
                    for (int j = discos; j >= 0; j--)                                   // Itera en la columna destino de abajo hacia arriba
                    {
                        if (H[j, C_dest] == 0)                                          // Busca un espacio libre 
                        {
                            if(j<discos)                                                // Si no es el unico disco
                            {
                                if (H[i, C_orig] > H[j + 1, C_dest])                     // Compara con el de abajo 
                                {
                                    Console.WriteLine("Ese es un movimiento ilegal");   // Muestra si se puede
                                }
                                else                                                    // Realiza el cambio
                                {
                                    H[j, C_dest] = H[i, C_orig];
                                    H[i, C_orig] = 0;
                                    break;
                                }
                            }
                        }
                    }
                }
                else {Console.WriteLine("En esta columna no hay nada"); }               // Si no encuentra nada vuelve a llamarse
                break;
            }
            // ** termina logica del juego ** 
            return (H);
        }
        

    }            
}
